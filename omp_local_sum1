#include "stdlib.h"
#include "stdio.h"
#include "omp.h"
#define MAX_THREADS 32
#define SIZE 100000000
double input[SIZE];

void generate_random(double *input, size_t size)
{
  for (size_t i = 0; i < size; i++) {
    input[i] = rand() / (double)(RAND_MAX);
  }
}


double serial_sum(double *x, size_t size)
{
  omp_set_num_threads(1);
  double local_sum[MAX_THREADS];
  double total = 0;
  int id = omp_get_thread_num();
  local_sum[id] = 0.0;
#pragma omp parallel
{
   for (size_t i = 0; i < size; i++) {
    local_sum[id] += x[i];
  }
 }

   for(size_t i = 0; i < size; i++){
     total += local_sum[i];
   }


  return total;
 }

int main(int argc, char *argv[])
{
  double sum;

  double start_time = omp_get_wtime();

  generate_random(input, SIZE);
  sum = serial_sum(input, SIZE);

  double run_time = omp_get_wtime() - start_time;
  printf("%f %f \n",sum, run_time);
  return 0;
}
